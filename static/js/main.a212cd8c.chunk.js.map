{"version":3,"sources":["api/api.js","assets/images/user_image.jpg","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/Spinner-1s-200px.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","initialState","dialogs","name","id","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","News","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","alt","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","value","maxLengthCreator","maxLength","preloader","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.a212cd8c.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"c6d8e982-0954-4c23-a87b-3c72dfb8d4a5\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status});\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile);\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/user_image.93ae484d.jpg\";","const SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {name: 'Dimych', id: 1},\n        {name: 'Sveta', id: 2},\n        {name: 'Zhenya', id: 3}\n    ],\n    messages: [\n        {message: 'Hi', id: 1},\n        {message: 'Yo', id: 2},\n        {message: 'How are you?', id: 3}\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {message: body, id: 4}]\n            };\n        default:\n            return state;\n    }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\nexport default dialogsReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectedPage\":\"users_selectedPage__1mnwI\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.27fc27b6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => (\n    <nav className={s.nav}>\n        <div className={s.item}><NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink></div>\n        <div className={s.item}><NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink></div>\n        <div className={s.item}><NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink></div>\n        <div className={s.item}><NavLink to='/news' activeClassName={s.activeLink}>News</NavLink></div>\n        <div className={s.item}><NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink></div>\n        <div className={s.item}><NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink></div>\n\n    </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n};\n\nexport default News;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u\n    })\n}\n\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user_image.jpg\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                Follow</button>}\n\n                    </div>\n                </span>\n            <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n        </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n        return users.filter(u => true);\n    })\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    toggleFollowingProgress,\n    unfollow, requestUsers\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers,\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n\n    };\n\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount:getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers: requestUsers\n    })\n)(UsersContainer)\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className={s.header}>\n        <img src=\"https://shmector.com/_ph/13/510962645.png\" alt=\"logo\"/>\n\n        <div className={s.loginBlock}>\n            {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n                </header>\n                };\n\n                export default Header;\n","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n});\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me()\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n        let message = response.data.messages.length ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {authAPI} from \"../../api/api\";\n\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField(\"Symbol from image\", \"captcha\", [required], Input, {})}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\n\nconst sidebarReducer = (state=initialState, action) => {\n\n    return state\n};\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.__store__ = store;\n\nexport default store;","import React, {Suspense} from 'react';\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <Component {...props} />\n        </Suspense>\n\n    };\n}\n","import React, {lazy} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = lazy(() => import(\"./components/Profile/ProfileContainer\"))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return <HashRouter>\n        <Provider store = {store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\nexport default SamuraiJSApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJSApp/>,\n        document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const required = value => {\n    if (value) return undefined;\n    return 'error message';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol `;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","import React from 'react';\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\n\n\nlet Preloader = (props) => {\n    return <div>\n        <img src={preloader}/>\n    </div>\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\n        {id: 3, message: 'Blabla', likesCount: 11},\n        {id: 4, message: 'Dada', likesCount: 11}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n\n        case SAVE_PHOTO_SUCCESS:\n            debugger;\n            return {...state, profile: {...state.profile, photos: action.photos }}\n        default:\n            return state;\n    }\n}\n\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\n        return Promise.reject(response.data.messages[0]);\n    }\n}\n\nexport default profileReducer;"],"sourceRoot":""}