{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYpMC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCnBC,EALC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,iCCCvCC,EAAcC,YAAiB,IAkBxBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBZ,SAACd,GAGpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,wBAE7C,6BACI,6CCoBDC,EA5BC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QACpF8B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEhC,GAAIA,GAAIgC,EAAEhC,QACxEuB,EAAMU,eAO3B,OACI,yBAAKhC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEgC,cACbT,GAEL,yBAAKxB,UAAWC,IAAE6B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAZb,SAACqB,GACjBrC,EAAMsC,YAAYD,EAAOF,sB,gDCf7BI,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,S,OCiBRE,sBACXC,aAdkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACH,GACVS,EAASC,YAAmBV,UDTR,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKhD,MAAMwC,OACT,kBAACM,EAAaE,KAAKhD,OADK,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACX0C,IAAMH,WAQtC,OADqCH,YAAQJ,EAARI,CAAqCI,KCM/DL,CAEOlB","file":"static/js/4.fff29929.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>\n};\n\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n};\n\n\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport React from \"react\";\n\n\nconst maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       name=\"newMessageBody\" placeholder='Enter your message'/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    };\n\n    //if (!props.isAuth) return <Redirect to={'/login'}/>;\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n};\n\n\n\nexport default Dialogs;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>\n            return <Component{...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)(Dialogs)\n"],"sourceRoot":""}