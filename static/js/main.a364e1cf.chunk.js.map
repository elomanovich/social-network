{"version":3,"sources":["assets/images/user_image.jpg","api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/Spinner-1s-200px.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","name","id","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","props","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","alt","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","preloader","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.a364e1cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user_image.93ae484d.jpg\";","import * as axios from \"axios\";\n\nconst baseUrl = `https://social-network.samuraijs.com/api/1.0/`;\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        'API-KEY': 'c6d8e982-0954-4c23-a87b-3c72dfb8d4a5'\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n\n    },\n    getProfile(userId) {\n        console.warn(\"Absolute method. Please use profileAPI method\")\n        return profileAPI.getProfile(userId)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put('profile/status', {status:status})\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe=false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\n\n\n","const SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {name: 'Dimych', id: 1},\n        {name: 'Sveta', id: 2},\n        {name: 'Zhenya', id: 3}\n    ],\n    messages: [\n        {message: 'Hi', id: 1},\n        {message: 'Yo', id: 2},\n        {message: 'How are you?', id: 3}\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {message: body, id: 4}]\n            };\n        default:\n            return state;\n    }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\nexport default dialogsReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectedPage\":\"users_selectedPage__1mnwI\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.27fc27b6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => (\n    <nav className={s.nav}>\n        <div className={s.item}><NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink></div>\n        <div className={s.item}><NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink></div>\n        <div className={s.item}><NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink></div>\n        <div className={s.item}><NavLink to='/news' activeClassName={s.activeLink}>News</NavLink></div>\n        <div className={s.item}><NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink></div>\n        <div className={s.item}><NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink></div>\n\n    </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n};\n\nexport default News;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u\n    })\n}\n\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user_image.jpg\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                Follow</button>}\n\n                    </div>\n                </span>\n            <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n        </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n        return users.filter(u => true);\n    })\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    toggleFollowingProgress,\n    unfollow, requestUsers\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers,\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n\n    };\n\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount:getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers: requestUsers\n    })\n)(UsersContainer)\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className={s.header}>\n        <img src=\"https://shmector.com/_ph/13/510962645.png\" alt=\"logo\"/>\n\n        <div className={s.loginBlock}>\n            {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n                </header>\n                };\n\n                export default Header;\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me()\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let message = response.data.messages.length ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {authAPI} from \"../../api/api\";\n\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\n\nconst sidebarReducer = (state=initialState, action) => {\n\n    return state\n};\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.__store__ = store;\n\nexport default store;","import React, {Suspense} from 'react';\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <Component {...props} />\n        </Suspense>\n\n    };\n}\n","import React, {lazy} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = lazy(() => import(\"./components/Profile/ProfileContainer\"))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return <HashRouter>\n        <Provider store = {store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\nexport default SamuraiJSApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJSApp/>,\n        document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined;\n    return 'error message';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol `;\n    return undefined;\n}","import React from 'react';\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\n\n\nlet Preloader = (props) => {\n    return <div>\n        <img src={preloader}/>\n    </div>\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\n        {id: 3, message: 'Blabla', likesCount: 11},\n        {id: 4, message: 'Dada', likesCount: 11}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n        default:\n            return state;\n    }\n}\n\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\n\nexport default profileReducer;"],"sourceRoot":""}